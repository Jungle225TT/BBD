--videowebsiteCreate.sql

-- Drop existing tables and their constraints, if they exist, to avoid conflicts during recreation
DROP TABLE SUBSCRIPTION CASCADE CONSTRAINTS;
DROP TABLE FAVORITES CASCADE CONSTRAINTS;
DROP TABLE WATCHHISTORY CASCADE CONSTRAINTS;
DROP TABLE EPISODE CASCADE CONSTRAINTS;
DROP TABLE SHOW CASCADE CONSTRAINTS;
DROP TABLE VIDEO CASCADE CONSTRAINTS;
DROP TABLE CATEGORY CASCADE CONSTRAINTS;
DROP TABLE "USER" CASCADE CONSTRAINTS;
DROP TABLE ARCHIVEVIDEO CASCADE CONSTRAINTS;

-- Drop existing sequences, if they exist
DROP SEQUENCE SEQ_USER;
DROP SEQUENCE SEQ_CATEGORY;
DROP SEQUENCE SEQ_VIDEO;
DROP SEQUENCE SEQ_SHOW;
DROP SEQUENCE SEQ_EPISODE;
DROP SEQUENCE SEQ_WATCHHISTORY;
DROP SEQUENCE SEQ_FAVORITES;
DROP SEQUENCE SEQ_SUBSCRIPTION;
DROP SEQUENCE SEQ_ARCHIVEVIDEO;

-- Create new sequences for primary key generation
CREATE SEQUENCE SEQ_USER START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_CATEGORY START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_VIDEO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_SHOW START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_EPISODE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_WATCHHISTORY START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_FAVORITES START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_SUBSCRIPTION START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_ARCHIVEVIDEO START WITH 1 INCREMENT BY 1;

-- Create table for users
CREATE TABLE "USER" (
    USERID INT PRIMARY KEY, -- Unique user ID
    NAME VARCHAR2(100) NOT NULL, -- User's name
    GENDER CHAR(1) CHECK (GENDER IN ('M','F','U')), -- Gender ('M' = Male, 'F' = Female, 'U' = Unspecified)
    BIRTHDATE DATE, -- User's birth date
    EMAIL VARCHAR2(100) NOT NULL UNIQUE, -- Email address, must be unique
    CONSENT CHAR(1) CHECK (CONSENT IN ('Y','N')), -- Consent to terms ('Y' = Yes, 'N' = No)
    COUNTRY VARCHAR2(100) -- Country of residence
);

-- Create table for categories
CREATE TABLE CATEGORY (
    CATEGORYID INT PRIMARY KEY,
    CATEGORYNAME VARCHAR2(100) NOT NULL UNIQUE
);

-- Create table for videos
CREATE TABLE VIDEO (
    VIDEOID INT PRIMARY KEY, -- Unique video ID
    NAME VARCHAR2(200) NOT NULL, -- Video name
    DESCRIPTION CLOB, -- Video description
    DURATION NUMBER(5) CHECK (DURATION > 0), -- Video duration in minutes
    PUBLISHDATE DATE, -- Date of publication
    COUNTRY VARCHAR2(100), -- Country of origin
    MULTILANGUAGE CHAR(1) CHECK (MULTILANGUAGE IN ('Y','N')), -- Supports multiple languages ('Y' = Yes, 'N' = No)
    FORMAT VARCHAR2(50), -- Video format (e.g., HD, 4K)
    CATEGORYID INT, -- Foreign key referencing category
    FOREIGN KEY (CATEGORYID) REFERENCES CATEGORY(CATEGORYID)
);

-- Create table for shows
CREATE TABLE SHOW (
    SHOWID INT PRIMARY KEY, -- Unique show ID
    NAME VARCHAR2(200) NOT NULL, -- Show name
    CATEGORYID INT, -- Foreign key referencing category
    FOREIGN KEY (CATEGORYID) REFERENCES CATEGORY(CATEGORYID)
);

-- Create table for episodes
CREATE TABLE EPISODE (
    EPISODEID INT PRIMARY KEY, -- Unique episode ID
    SHOWID INT, -- Foreign key referencing show
    VIDEOID INT, -- Foreign key referencing video
    EPISODENUMBER INT, -- Episode number
    FOREIGN KEY (SHOWID) REFERENCES SHOW(SHOWID),
    FOREIGN KEY (VIDEOID) REFERENCES VIDEO(VIDEOID)
);

-- Create table for watch history
CREATE TABLE WATCHHISTORY (
    WATCHID INT PRIMARY KEY, -- Unique watch history ID
    USERID INT, -- Foreign key referencing user
    VIDEOID INT, -- Foreign key referencing video
    WATCHTIME TIMESTAMP DEFAULT SYSTIMESTAMP, -- Timestamp when the video was watched
    FOREIGN KEY (USERID) REFERENCES "USER"(USERID),
    FOREIGN KEY (VIDEOID) REFERENCES VIDEO(VIDEOID)
);

-- Create table for user favorites
CREATE TABLE FAVORITES (
    FAVORITEID INT PRIMARY KEY, -- Unique favorite ID
    USERID INT, -- Foreign key referencing user
    SHOWID INT, -- Foreign key referencing show
    FOREIGN KEY (USERID) REFERENCES "USER"(USERID),
    FOREIGN KEY (SHOWID) REFERENCES SHOW(SHOWID),
    UNIQUE(USERID, SHOWID) -- Ensures a user cannot favorite the same show multiple times
);

-- Create table for subscriptions
CREATE TABLE SUBSCRIPTION (
    SUBSCRIPTIONID INT PRIMARY KEY, -- Unique subscription ID
    USERID INT, -- Foreign key referencing user
    SHOWID INT, -- Foreign key referencing show
    FOREIGN KEY (USERID) REFERENCES "USER"(USERID),
    FOREIGN KEY (SHOWID) REFERENCES SHOW(SHOWID),
    UNIQUE(USERID, SHOWID) -- Ensures a user cannot subscribe to the same show multiple times
);

-- Create table for archived videos
CREATE TABLE ARCHIVEVIDEO (
    ARCHIVEID INT PRIMARY KEY, -- Unique archive ID
    VIDEOID INT, -- Foreign key referencing video
    ARCHIVEDATE DATE DEFAULT SYSDATE, -- Date when the video was archived
    FOREIGN KEY (VIDEOID) REFERENCES VIDEO(VIDEOID)
);

-- Create indexes to optimize queries
CREATE INDEX IDX_USER_EMAIL ON "USER"(EMAIL);
CREATE INDEX IDX_WATCHHISTORY_WATCHTIME ON WATCHHISTORY(WATCHTIME);
CREATE INDEX IDX_VIDEO_CATEGORYID ON VIDEO(CATEGORYID);
CREATE INDEX IDX_WATCHHISTORY_USER_VIDEO ON WATCHHISTORY(USERID, VIDEOID);
CREATE INDEX IDX_USER_COUNTRY ON "USER"(COUNTRY);
CREATE INDEX IDX_VIDEO_CAT_PUB ON VIDEO(CATEGORYID, PUBLISHDATE);

-- Insert sample data for users
INSERT INTO "USER" VALUES (SEQ_USER.NEXTVAL,'Zhang San','M',TO_DATE('1990-01-01','YYYY-MM-DD'),'zhangsan@example.com','Y','Germany');
INSERT INTO "USER" VALUES (SEQ_USER.NEXTVAL,'Li Si','F',TO_DATE('1985-05-15','YYYY-MM-DD'),'lisi@example.com','N','France');

-- Insert sample data for categories
INSERT INTO CATEGORY VALUES (SEQ_CATEGORY.NEXTVAL, 'Culture');
INSERT INTO CATEGORY VALUES (SEQ_CATEGORY.NEXTVAL, 'Movies');
INSERT INTO CATEGORY VALUES (SEQ_CATEGORY.NEXTVAL, 'Technology');


-- Insert sample data for videos
INSERT INTO VIDEO VALUES (SEQ_VIDEO.NEXTVAL, 'Exploring Culture', 'A show about different cultures', 60, TO_DATE('2024-11-01', 'YYYY-MM-DD'), 'China', 'Y', 'HD', 1);
INSERT INTO VIDEO VALUES (SEQ_VIDEO.NEXTVAL, 'New Movie Trailer', 'A trailer for upcoming movies', 120, TO_DATE('2024-11-05', 'YYYY-MM-DD'), 'USA', 'N', '4K', 2);
INSERT INTO VIDEO VALUES (SEQ_VIDEO.NEXTVAL, 'Tech Trends', 'Latest advancements in technology', 45, TO_DATE('2024-11-10', 'YYYY-MM-DD'), 'Japan', 'Y', 'HD', 3);


-- Insert sample data for shows
INSERT INTO SHOW VALUES (SEQ_SHOW.NEXTVAL, 'Cultural Series', 1);
INSERT INTO SHOW VALUES (SEQ_SHOW.NEXTVAL, 'Movie Highlights', 2);
INSERT INTO SHOW VALUES (SEQ_SHOW.NEXTVAL, 'Tech Insights', 3);

-- Insert sample data for episodes
INSERT INTO EPISODE VALUES (SEQ_EPISODE.NEXTVAL,1,1,1);
INSERT INTO EPISODE VALUES (SEQ_EPISODE.NEXTVAL,2,2,1);
INSERT INTO EPISODE VALUES (SEQ_EPISODE.NEXTVAL,3,3,1);

-- Insert sample data for watch history
INSERT INTO WATCHHISTORY VALUES (SEQ_WATCHHISTORY.NEXTVAL,1,1,SYSTIMESTAMP);
INSERT INTO WATCHHISTORY VALUES (SEQ_WATCHHISTORY.NEXTVAL,1,2,SYSTIMESTAMP);
INSERT INTO WATCHHISTORY VALUES (SEQ_WATCHHISTORY.NEXTVAL,2,3,SYSTIMESTAMP);

-- Insert sample data for favorites
INSERT INTO FAVORITES VALUES (SEQ_FAVORITES.NEXTVAL,1,1);
INSERT INTO FAVORITES VALUES (SEQ_FAVORITES.NEXTVAL,2,2);

-- Insert sample data for subscriptions
INSERT INTO SUBSCRIPTION VALUES (SEQ_SUBSCRIPTION.NEXTVAL,1,3);
INSERT INTO SUBSCRIPTION VALUES (SEQ_SUBSCRIPTION.NEXTVAL,2,1);
